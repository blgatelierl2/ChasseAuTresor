.lf 1 -
.lf 1 stdin
.TH "Atelier" L2 "1er octobre 2013" "L2 informatique" "TP3 \[u2014] Boucles, tests & arithm\[u00E9]tique"


.SH TP3 \[u2014] BOUCLES, TESTS & ARITHM\[u00C9]TIQUE

.P
Pour chacune des t\[u00E2]ches suivantes, il s'agit de trouver une s\[u00E9]quence de commandes shell la r\[u00E9]alisant. Si n\[u00E9]cessaire, on n'h\[u00E9]sitera pas \[u00E0] :

.RS
.IP \(bu 3
utiliser des fichiers temporaires pour stocker des donn\[u00E9]es interm\[u00E9]diaires ;
.IP \(bu 3
utiliser des variables pour stocker le r\[u00E9]sultat d'une commande, syntaxe \fBvar=$(commande)\fR ;
.IP \(bu 3
faire des op\[u00E9]rations arithm\[u00E9]tiques, syntaxe \fB$(($i+1))\fR ;
.IP \(bu 3
utiliser des boucles \fBfor\fR (avec \fBseq\fR) ou \fBwhile\fR ;
.IP \(bu 3
\[u00E9]crire les commandes dans un script...
.RE

.P
\fBRemarque\fR Des commandes utiles sont donn\[u00E9]es en indication, on prendra le temps d'en lire le manuel.

.SS \[u00C9]chauffement

.RS
.IP 1. 3
Tirer au hasard un mot dans le dictionnaire du syst\[u00E8]me \fB/usr/share/dict/words\fR (\[u00E0] l'aide de \fBwc\fR et de la variable \fB$RANDOM\fR qui contient \[u00E0] chaque utilisation un entier al\[u00E9]atoire).

.IP 2. 3
Former un juron du capitaine Haddock en tirant au hasard un adjectif et un qualificatif dans les fichiers \fBdata/haddock/noms\fR et \fBdata/haddock/qualificatifs\fR.

.IP 3. 3
Num\[u00E9]roter les lignes du fichier \fBdata/txt/cyrano.txt\fR (\[u00E0] l'aide de \fBseq\fR et \fBpaste\fR, on notera au passage que \fBcat \-n\fR permet d'en faire autant plus simplement).

.IP 4. 3
Afficher les termes de la suite de Syracuse, d\[u00E9]finie par \fBu(n+1)=u(n)/2\fR si \fBu(n)\fR est pair et \fB3*u(n)+1\fR sinon, partant de \fBu(0)=42\fR. On s'arr\[u00EA]tera lorsque la valeur 1 est atteinte.

.IP 5. 3
Convertir en d\[u00E9]cimal un nombre binaire contenu dans la variable \fB$binaire\fR (initialiser par exemple \fBbinaire=110110\fR).
.RE

.SS Chasse au tr\[u00E9]sor

.P
Inutile d'essayer de sauter des \[u00E9]tapes...

.RS
.IP 1. 3
Afficher le contenu du fichier \fBtp3/sheep/sheep\fR sur 28 colonnes (par exemple \[u00E0] l'aide de \fBpr\fR).

.IP 2. 3
Suivre la cha\[u00EE]ne de liens initi\[u00E9]e dans le fichier point\[u00E9] par la r\[u00E9]ponse pr\[u00E9]c\[u00E9]dente.

.IP 3. 3
Nettoyer le fichier de fin de cha\[u00EE]ne des caract\[u00E8]res non alphanum\[u00E9]riques pour d\[u00E9]couvrir une nouvelle indication.

.IP 4. 3
Suivre la nouvelle cha\[u00EE]ne. Attention aux pi\[u00E8]ges !

.IP 5. 3
D\[u00E9]terminer le fichier point\[u00E9] par le fichier de fin de la cha\[u00EE]ne pr\[u00E9]c\[u00E9]dente (\[u00E0] l'aide de \fBshasum\fR).

.IP 6. 3
Analyser ce fichier (\[u00E0] l'aide de \fBfile\fR). Le "d\[u00E9]structurer" autant de fois que n\[u00E9]cessaire (\[u00E0] l'aide de \fBzcat\fR et \fBbzcat\fR) pour en tirer quelque chose de lisible.

.IP 7. 3
The rest is silence (Hamlet V.2)
.RE

.\" man code generated by txt2tags 2.6 (http://txt2tags.org)
.\" cmdline: txt2tags -o - tp3.t2t
